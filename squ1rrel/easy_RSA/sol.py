from math import isqrt

def is_square(s):
    if s < 0:
        return False
    ssqrt = isqrt(s)
    return ssqrt ** 2 == s

def fermat_factor(n):
    a = isqrt(n) + 1
    b = a ** 2 - n
    while not is_square(b):
        a += 1
        b = a ** 2 - n
    b = isqrt(b)
    return (a+b, a-b)

(p, q) = (162844969802793369991428601458295181570536706599609454664094976374150994306422002904013120826461924570049490132847808181540893008813305140934077173993327436461912048726815700038563854363515704550897541580442036450232099126331779281555115480827104127689657088570096620633332930485612118325060906186228586482019, 162844969802793369991428601458295181570536706599609454664094976374150994306422002904013120826461924570049490132847808181540893008813305140934077173993221511741114503090171789361722157385749936254368680979467760601708231528381466644171627681117469122398345322805274888367547624418417938030736404407437613225877)

c = 14348338827461086677721392146480940700779126717642704712390609979555667316222300910938184262325989361356621355740821450291276190410903072539047611486439984853997473162360371156442125577815817328959277482760973390721183548251315381656163549044110292209833480901571843401260931970647928971053471126873192145825248657671112394111129236255144807222107062898136588067644203143226369746529685617078054235998762912294188770379463390263607054883907325356551707971088954430361996309098504380934167675525860405086306135899933171103093138346158349497350586212612442120636759620471953311221396375007425956203746772190351265066237
e = 65537
phi = (p - 1) * (q - 1)
n = 26518484190072684543796636642573643429663718007657844401363773206659586306986264997767920520901884078894807042866105584826044096909054367742753454178100533852686155634326578229244464083405472076784252798532101323300927917033985149599262487556178538148122012479094592746981412717431260240328326665253193374956717147239124238669998383943846418315819353858592278242580832695035016713351286816376107787722262574185450560176240134182669922757134881941918668067864082251416681188295948127121973857376227427652243249227143249036846400440184395983449367274506961173876131312502878352761335998067274325965774900643209446005663

d = pow(e, -1, phi)
message = pow(c, d, n)

def int_to_msg(msg):
    length = (message.bit_length() + 7) // 8
    message_bytes = message.to_bytes(length, 'big')
    return message_bytes.decode()

print(int_to_msg(message))